---
interface Context {
    text: string;
    cancle: string;
    okay: string;
}

const contexts: Array<Context> = [
    {
        text: "Light mode user detected...",
        cancle: "Keep it dark",
        okay: "I like light",
    },
    {
        text: "Light mode attracts bugs...",
        cancle: "I hate bugs",
        okay: "I have no fears",
    },
    {
        text: "It's too bright and going to hurt your eyes ...",
        cancle: "Save my eyes",
        okay: "I've goggles on",
    },
];

const context: Context = contexts[Math.floor(Math.random() * contexts.length)];
---

<div class="modal">
    <div class="box">
        <p class="confirm">Are you sure you want to change the theme?</p>
        <p class="text">{context.text}</p>
        <div class="action">
            <button class="button" id="cancle">
                {context.cancle}
            </button>
            <button class="button" id="okay">
                {context.okay}
            </button>
        </div>
    </div>
</div>

<style>
    .modal {
        z-index: 100;
        position: fixed;
        inset: 0;
        opacity: 0;
        display: none;
        pointer-events: none;
        justify-content: center;
        align-items: center;
        transition: all 0.25s ease-in-out;
        background-color: rgba(0, 0, 0, 0.5);
        backdrop-filter: blur(0.25rem);
    }
    .box {
        width: 100%;
        max-width: calc(0.75 * var(--max-width));
        box-shadow: 0.1rem 0.1rem 0.5rem var(--sub-text);
        background-color: var(--background);
        color: var(--sub-text);
        border-radius: 0.5rem;
        padding: 1rem;
        margin: 1rem;
    }
    .confirm {
        font-size: 0.8rem;
        color: var(--text);
    }
    .action {
        display: flex;
        justify-content: end;
        align-items: center;
        padding-top: 1rem;
        gap: 1rem;
    }
    .button {
        color: var(--sub-text);
        padding: 0.25rem 0.75rem;
        background-color: transparent;
        border: solid 0.05rem var(--sub-text);
        box-shadow: 0.05rem 0.05rem var(--sub-text);
        transition: all 0.1s ease-in-out;
        border-radius: 0.25rem;
    }
    .button:hover {
        box-shadow: 0.1rem 0.1rem var(--sub-text);
    }
    :global(.showThemeModal) .modal {
        opacity: 1;
        display: flex;
        pointer-events: auto;
    }
</style>

<script async is:inline>
    const hideCancle = () => {
        document.documentElement.classList.toggle("showThemeModal");
        setTimeout(() => {
            localStorage.setItem("theme", "dark");
            document.documentElement.classList = "dark";
        }, 250);
    };

    const hideOkay = () => {
        document.documentElement.classList.toggle("showThemeModal");
    };

    document.getElementById("cancle").addEventListener("click", hideCancle);

    document.getElementById("okay").addEventListener("click", hideOkay);
</script>
